name: Test

env:
  DENO_DIR: ".deno"

on:
  push:
    branches:
      - main
    paths:
      - "**/*.md"
      - "**/*.ts"
      - ".github/workflows/test.yml"
      - "Makefile"
  pull_request:
    paths:
      - "**/*.md"
      - "**/*.ts"
      - ".github/workflows/test.yml"
      - "Makefile"

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

jobs:
  check:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        version:
          - "1.x"
    runs-on: ${{ matrix.runner }}
    steps:
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "${{ matrix.version }}"
      - uses: actions/cache@v2
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-deno-${{ matrix.version }}-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-deno-${{ matrix.version }}-
            ${{ runner.os }}-deno-
      - name: Lint check
        run: make lint
      - name: Format check
        run: make fmt-check
      - name: Type check
        run: make type-check

  test:
    strategy:
      matrix:
        runner:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        version:
          - "1.x"
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "${{ matrix.version }}"
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-deno-${{ matrix.version }}-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-deno-${{ matrix.version }}-
            ${{ runner.os }}-deno-
      - name: Test
        run: make test
        timeout-minutes: 10
